{
  "address": "0x3e4027B8F277Ba59506dCa81e91b812a3CFaC11A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "allowanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "checkAllowances",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x57e4ea54a6b1f51a9f3b93e6c5bfaf2a18d54d65dcf1da2392a3fdf8fae06dd7",
  "receipt": {
    "to": null,
    "from": "0x633Da015e60F63b7de56817e9680D532aAa20016",
    "contractAddress": "0x3e4027B8F277Ba59506dCa81e91b812a3CFaC11A",
    "transactionIndex": 9,
    "gasUsed": "957941",
    "logsBloom": "0x
    "blockHash": "0xd74e7b8d0b0c17c9e54bcd0cc6a00b65b122fd20fa353b8a2a37c8c44ab31958",
    "transactionHash": "0x57e4ea54a6b1f51a9f3b93e6c5bfaf2a18d54d65dcf1da2392a3fdf8fae06dd7",
    "logs": [],
    "blockNumber": 16968594,
    "cumulativeGasUsed": "7109050",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "902c0fcde7874323583943ce1892695e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"allowanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"checkAllowances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/agent/lib/AllowanceRangeOneTime.sol\":\"AllowanceRangeOneTime\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/agent/interfaces/IAllowanceStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.11;\\n\\ninterface IAllowanceStrategy {\\n    function set(\\n        address owner,\\n        address buyer,\\n        bytes memory args\\n    ) external;\\n\\n    function checkAllowances(\\n        address owner,\\n        address buyer,\\n        uint[] memory ids,\\n        uint[] memory amounts\\n    ) external;\\n\\n    function allowanceOfBatch(\\n        address owner,\\n        address buyer,\\n        uint[] memory ids\\n    ) external view returns(uint[] memory);\\n}\\n\",\"keccak256\":\"0xc7f982fe16c300e00c7bbce5489b6ca22b01de8e402545a663420c37b4335a08\",\"license\":\"MIT\"},\"contracts/agent/lib/AllowanceRangeOneTime.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.11;\\npragma experimental ABIEncoderV2;\\n\\nimport '../interfaces/IAllowanceStrategy.sol';\\nimport './AllowanceRangeOneTimeStorage.sol';\\n\\ncontract AllowanceRangeOneTime is IAllowanceStrategy {\\n    function set(\\n        address owner,\\n        address buyer,\\n        bytes memory args\\n    ) external override {\\n        AllowanceRangeOneTimeStorage.Layout storage l =\\n            AllowanceRangeOneTimeStorage.layout();\\n        AllowanceRangeOneTimeStorage.RangeAllowance memory toSet =\\n            abi.decode(args, (AllowanceRangeOneTimeStorage.RangeAllowance));\\n        require(\\n            l.allowances[owner][buyer].allowance == 0 || toSet.allowance == 0,\\n            'AllowanceRange: reset allowace to 0 first'\\n        );\\n        l.allowances[owner][buyer] = toSet;\\n    }\\n\\n    function checkAllowances(\\n        address owner,\\n        address buyer,\\n        uint[] memory ids,\\n        uint[] memory amounts\\n    ) external override {\\n        AllowanceRangeOneTimeStorage.Layout storage l\\n            = AllowanceRangeOneTimeStorage.layout();\\n        AllowanceRangeOneTimeStorage.RangeAllowance memory range =\\n            l.allowances[owner][buyer];\\n        for (uint i = 0; i < ids.length; i++) {\\n            uint128 start = uint128(ids[i] >> 128);\\n            uint128 end = uint128(ids[i]);\\n            require(\\n                start >= range.start && end <= range.end && amounts[i] <= range.allowance,\\n                'AllowanceRange: insufficient allowance'\\n            );\\n        }\\n        l.allowances[owner][buyer].allowance = 0;\\n    }\\n\\n    function allowanceOfBatch(\\n        address owner,\\n        address buyer,\\n        uint[] memory ids\\n    ) external override view returns(uint[] memory) {\\n        AllowanceRangeOneTimeStorage.RangeAllowance memory range =\\n            AllowanceRangeOneTimeStorage.layout().allowances[owner][buyer];\\n        uint[] memory allowances = new uint[](ids.length);\\n        for (uint i = 0; i < ids.length; i++) {\\n            uint128 start = uint128(ids[i] >> 128);\\n            uint128 end = uint128(ids[i]);\\n            if (start >= range.start && end <= range.end) {\\n                allowances[i] = range.allowance;\\n            }\\n        }\\n        return allowances;\\n    }\\n}\\n\",\"keccak256\":\"0xdfd06184eab59df7d7110cc1d28659b8fce3593fc2bcb21bb58c3e7673d37b22\",\"license\":\"MIT\"},\"contracts/agent/lib/AllowanceRangeOneTimeStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.11;\\n\\nlibrary AllowanceRangeOneTimeStorage {\\n    struct RangeAllowance {\\n        uint128 start;\\n        uint128 end;\\n        uint allowance;\\n    }\\n\\n    struct Layout {\\n        mapping(address => mapping(address => RangeAllowance)) allowances;\\n    }\\n\\n    bytes32 internal constant STORAGE_SLOT =\\n        keccak256('mining3.agent.contracts.storage.AllowanceRangeOneTime');\\n\\n    function layout() internal pure returns(Layout storage l) {\\n        bytes32 slot = STORAGE_SLOT;\\n        assembly {\\n            l.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x829dfb14566e98958c72947b54ae338583e9e6592d59743c527cbc5934f0a1dd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061106a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632196f2911461004657806357efe37414610062578063b8ac1b6814610092575b600080fd5b610060600480360381019061005b9190610a53565b6100ae565b005b61007c60048036038101906100779190610af2565b6103a1565b6040516100899190610c1f565b60405180910390f35b6100ac60048036038101906100a79190610cf6565b61061d565b005b60006100b8610825565b905060008160000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001600182015481525050905060005b8451811015610311576000608086838151811061020857610207610d65565b5b6020026020010151901c9050600086838151811061022957610228610d65565b5b6020026020010151905083600001516fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff1610158015610293575083602001516fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff1611155b80156102bd575083604001518684815181106102b2576102b1610d65565b5b602002602001015111155b6102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390610e17565b60405180910390fd5b5050808061030990610e66565b9150506101e8565b5060008260000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550505050505050565b606060006103ad610825565b60000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200160018201548152505090506000835167ffffffffffffffff8111156104f2576104f16108da565b5b6040519080825280602002602001820160405280156105205781602001602082028036833780820191505090505b50905060005b8451811015610610576000608086838151811061054657610545610d65565b5b6020026020010151901c9050600086838151811061056757610566610d65565b5b6020026020010151905084600001516fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff16101580156105d1575084602001516fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff1611155b156105fb5784604001518484815181106105ee576105ed610d65565b5b6020026020010181815250505b5050808061060890610e66565b915050610526565b5080925050509392505050565b6000610627610825565b905060008280602001905181019061063f9190610f75565b905060008260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414806106d5575060008160400151145b610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90611014565b60405180910390fd5b808260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060208201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550604082015181600101559050505050505050565b6000807f41e2011eeb155b4ce2fa3fcb8cd7bb14d12b37529e552a507345a0dc34cd565f90508091505090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061089182610866565b9050919050565b6108a181610886565b81146108ac57600080fd5b50565b6000813590506108be81610898565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610912826108c9565b810181811067ffffffffffffffff82111715610931576109306108da565b5b80604052505050565b6000610944610852565b90506109508282610909565b919050565b600067ffffffffffffffff8211156109705761096f6108da565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b61099981610986565b81146109a457600080fd5b50565b6000813590506109b681610990565b92915050565b60006109cf6109ca84610955565b61093a565b905080838252602082019050602084028301858111156109f2576109f1610981565b5b835b81811015610a1b5780610a0788826109a7565b8452602084019350506020810190506109f4565b5050509392505050565b600082601f830112610a3a57610a396108c4565b5b8135610a4a8482602086016109bc565b91505092915050565b60008060008060808587031215610a6d57610a6c61085c565b5b6000610a7b878288016108af565b9450506020610a8c878288016108af565b935050604085013567ffffffffffffffff811115610aad57610aac610861565b5b610ab987828801610a25565b925050606085013567ffffffffffffffff811115610ada57610ad9610861565b5b610ae687828801610a25565b91505092959194509250565b600080600060608486031215610b0b57610b0a61085c565b5b6000610b19868287016108af565b9350506020610b2a868287016108af565b925050604084013567ffffffffffffffff811115610b4b57610b4a610861565b5b610b5786828701610a25565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610b9681610986565b82525050565b6000610ba88383610b8d565b60208301905092915050565b6000602082019050919050565b6000610bcc82610b61565b610bd68185610b6c565b9350610be183610b7d565b8060005b83811015610c12578151610bf98882610b9c565b9750610c0483610bb4565b925050600181019050610be5565b5085935050505092915050565b60006020820190508181036000830152610c398184610bc1565b905092915050565b600080fd5b600067ffffffffffffffff821115610c6157610c606108da565b5b610c6a826108c9565b9050602081019050919050565b82818337600083830152505050565b6000610c99610c9484610c46565b61093a565b905082815260208101848484011115610cb557610cb4610c41565b5b610cc0848285610c77565b509392505050565b600082601f830112610cdd57610cdc6108c4565b5b8135610ced848260208601610c86565b91505092915050565b600080600060608486031215610d0f57610d0e61085c565b5b6000610d1d868287016108af565b9350506020610d2e868287016108af565b925050604084013567ffffffffffffffff811115610d4f57610d4e610861565b5b610d5b86828701610cc8565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f416c6c6f77616e636552616e67653a20696e73756666696369656e7420616c6c60008201527f6f77616e63650000000000000000000000000000000000000000000000000000602082015250565b6000610e01602683610d94565b9150610e0c82610da5565b604082019050919050565b60006020820190508181036000830152610e3081610df4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e7182610986565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ea457610ea3610e37565b5b600182019050919050565b600080fd5b60006fffffffffffffffffffffffffffffffff82169050919050565b610ed981610eb4565b8114610ee457600080fd5b50565b600081519050610ef681610ed0565b92915050565b600081519050610f0b81610990565b92915050565b600060608284031215610f2757610f26610eaf565b5b610f31606061093a565b90506000610f4184828501610ee7565b6000830152506020610f5584828501610ee7565b6020830152506040610f6984828501610efc565b60408301525092915050565b600060608284031215610f8b57610f8a61085c565b5b6000610f9984828501610f11565b91505092915050565b7f416c6c6f77616e636552616e67653a20726573657420616c6c6f77616365207460008201527f6f20302066697273740000000000000000000000000000000000000000000000602082015250565b6000610ffe602983610d94565b915061100982610fa2565b604082019050919050565b6000602082019050818103600083015261102d81610ff1565b905091905056fea2646970667358221220eda23b19f65e69a58d16187aa4d887072278bf43e4b6365eb964898e4d05d8b964736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632196f2911461004657806357efe37414610062578063b8ac1b6814610092575b600080fd5b610060600480360381019061005b9190610a53565b6100ae565b005b61007c60048036038101906100779190610af2565b6103a1565b6040516100899190610c1f565b60405180910390f35b6100ac60048036038101906100a79190610cf6565b61061d565b005b60006100b8610825565b905060008160000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001600182015481525050905060005b8451811015610311576000608086838151811061020857610207610d65565b5b6020026020010151901c9050600086838151811061022957610228610d65565b5b6020026020010151905083600001516fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff1610158015610293575083602001516fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff1611155b80156102bd575083604001518684815181106102b2576102b1610d65565b5b602002602001015111155b6102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390610e17565b60405180910390fd5b5050808061030990610e66565b9150506101e8565b5060008260000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550505050505050565b606060006103ad610825565b60000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200160018201548152505090506000835167ffffffffffffffff8111156104f2576104f16108da565b5b6040519080825280602002602001820160405280156105205781602001602082028036833780820191505090505b50905060005b8451811015610610576000608086838151811061054657610545610d65565b5b6020026020010151901c9050600086838151811061056757610566610d65565b5b6020026020010151905084600001516fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff16101580156105d1575084602001516fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff1611155b156105fb5784604001518484815181106105ee576105ed610d65565b5b6020026020010181815250505b5050808061060890610e66565b915050610526565b5080925050509392505050565b6000610627610825565b905060008280602001905181019061063f9190610f75565b905060008260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414806106d5575060008160400151145b610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90611014565b60405180910390fd5b808260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060208201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550604082015181600101559050505050505050565b6000807f41e2011eeb155b4ce2fa3fcb8cd7bb14d12b37529e552a507345a0dc34cd565f90508091505090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061089182610866565b9050919050565b6108a181610886565b81146108ac57600080fd5b50565b6000813590506108be81610898565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610912826108c9565b810181811067ffffffffffffffff82111715610931576109306108da565b5b80604052505050565b6000610944610852565b90506109508282610909565b919050565b600067ffffffffffffffff8211156109705761096f6108da565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b61099981610986565b81146109a457600080fd5b50565b6000813590506109b681610990565b92915050565b60006109cf6109ca84610955565b61093a565b905080838252602082019050602084028301858111156109f2576109f1610981565b5b835b81811015610a1b5780610a0788826109a7565b8452602084019350506020810190506109f4565b5050509392505050565b600082601f830112610a3a57610a396108c4565b5b8135610a4a8482602086016109bc565b91505092915050565b60008060008060808587031215610a6d57610a6c61085c565b5b6000610a7b878288016108af565b9450506020610a8c878288016108af565b935050604085013567ffffffffffffffff811115610aad57610aac610861565b5b610ab987828801610a25565b925050606085013567ffffffffffffffff811115610ada57610ad9610861565b5b610ae687828801610a25565b91505092959194509250565b600080600060608486031215610b0b57610b0a61085c565b5b6000610b19868287016108af565b9350506020610b2a868287016108af565b925050604084013567ffffffffffffffff811115610b4b57610b4a610861565b5b610b5786828701610a25565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610b9681610986565b82525050565b6000610ba88383610b8d565b60208301905092915050565b6000602082019050919050565b6000610bcc82610b61565b610bd68185610b6c565b9350610be183610b7d565b8060005b83811015610c12578151610bf98882610b9c565b9750610c0483610bb4565b925050600181019050610be5565b5085935050505092915050565b60006020820190508181036000830152610c398184610bc1565b905092915050565b600080fd5b600067ffffffffffffffff821115610c6157610c606108da565b5b610c6a826108c9565b9050602081019050919050565b82818337600083830152505050565b6000610c99610c9484610c46565b61093a565b905082815260208101848484011115610cb557610cb4610c41565b5b610cc0848285610c77565b509392505050565b600082601f830112610cdd57610cdc6108c4565b5b8135610ced848260208601610c86565b91505092915050565b600080600060608486031215610d0f57610d0e61085c565b5b6000610d1d868287016108af565b9350506020610d2e868287016108af565b925050604084013567ffffffffffffffff811115610d4f57610d4e610861565b5b610d5b86828701610cc8565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f416c6c6f77616e636552616e67653a20696e73756666696369656e7420616c6c60008201527f6f77616e63650000000000000000000000000000000000000000000000000000602082015250565b6000610e01602683610d94565b9150610e0c82610da5565b604082019050919050565b60006020820190508181036000830152610e3081610df4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e7182610986565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ea457610ea3610e37565b5b600182019050919050565b600080fd5b60006fffffffffffffffffffffffffffffffff82169050919050565b610ed981610eb4565b8114610ee457600080fd5b50565b600081519050610ef681610ed0565b92915050565b600081519050610f0b81610990565b92915050565b600060608284031215610f2757610f26610eaf565b5b610f31606061093a565b90506000610f4184828501610ee7565b6000830152506020610f5584828501610ee7565b6020830152506040610f6984828501610efc565b60408301525092915050565b600060608284031215610f8b57610f8a61085c565b5b6000610f9984828501610f11565b91505092915050565b7f416c6c6f77616e636552616e67653a20726573657420616c6c6f77616365207460008201527f6f20302066697273740000000000000000000000000000000000000000000000602082015250565b6000610ffe602983610d94565b915061100982610fa2565b604082019050919050565b6000602082019050818103600083015261102d81610ff1565b905091905056fea2646970667358221220eda23b19f65e69a58d16187aa4d887072278bf43e4b6365eb964898e4d05d8b964736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}