{
  "address": "0x84bC8809C75657EAE695d413067C9A375b52781E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "allowanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "checkAllowances",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc256853f27ca70bd262dc05a033121694124686733cceaae0e1421c3e69c55e1",
  "receipt": {
    "to": null,
    "from": "0x633Da015e60F63b7de56817e9680D532aAa20016",
    "contractAddress": "0x84bC8809C75657EAE695d413067C9A375b52781E",
    "transactionIndex": 4,
    "gasUsed": "741638",
    "logsBloom": "0x
    "blockHash": "0x34664bae3e8c86b81f4d46cee4066a90d2758d12ca34b0fb5e57e8fabc6016db",
    "transactionHash": "0xc256853f27ca70bd262dc05a033121694124686733cceaae0e1421c3e69c55e1",
    "logs": [],
    "blockNumber": 16968590,
    "cumulativeGasUsed": "1562581",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "902c0fcde7874323583943ce1892695e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"allowanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"checkAllowances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/agent/lib/AllowanceFixedOneTime.sol\":\"AllowanceFixedOneTime\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/agent/interfaces/IAllowanceStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.11;\\n\\ninterface IAllowanceStrategy {\\n    function set(\\n        address owner,\\n        address buyer,\\n        bytes memory args\\n    ) external;\\n\\n    function checkAllowances(\\n        address owner,\\n        address buyer,\\n        uint[] memory ids,\\n        uint[] memory amounts\\n    ) external;\\n\\n    function allowanceOfBatch(\\n        address owner,\\n        address buyer,\\n        uint[] memory ids\\n    ) external view returns(uint[] memory);\\n}\\n\",\"keccak256\":\"0xc7f982fe16c300e00c7bbce5489b6ca22b01de8e402545a663420c37b4335a08\",\"license\":\"MIT\"},\"contracts/agent/lib/AllowanceFixedOneTime.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.11;\\npragma experimental ABIEncoderV2;\\n\\nimport '../../shared/lib/Util.sol';\\nimport '../interfaces/IAllowanceStrategy.sol';\\nimport './AllowanceFixedOneTimeStorage.sol';\\n\\ncontract AllowanceFixedOneTime is IAllowanceStrategy {\\n    function set(\\n        address owner,\\n        address buyer,\\n        bytes memory args\\n    ) external override {\\n        AllowanceFixedOneTimeStorage.Layout storage l\\n            = AllowanceFixedOneTimeStorage.layout();\\n        uint allowance = abi.decode(args, (uint));\\n        require(\\n            l.allowances[owner][buyer] == 0 || allowance == 0,\\n            'AllowanceStatic: reset allowance to 0 first'\\n        );\\n        l.allowances[owner][buyer] = allowance;\\n    }\\n\\n    function checkAllowances(\\n        address owner,\\n        address buyer,\\n        uint[] memory ids,\\n        uint[] memory amounts\\n    ) external override {\\n        AllowanceFixedOneTimeStorage.Layout storage l\\n            = AllowanceFixedOneTimeStorage.layout();\\n        uint allowance = l.allowances[owner][buyer];\\n        for (uint i = 0; i < ids.length; i++) {\\n            require(\\n                amounts[i] <= allowance,\\n                'AllowanceFixed: insufficient allowance'\\n            );\\n        }\\n        l.allowances[owner][buyer] = 0;\\n    }\\n\\n    function allowanceOfBatch(\\n        address owner,\\n        address buyer,\\n        uint[] memory ids\\n    ) external override view returns(uint[] memory) {\\n        AllowanceFixedOneTimeStorage.Layout storage l\\n            = AllowanceFixedOneTimeStorage.layout();\\n        uint[] memory allowances = new uint[](ids.length);\\n        uint allowance = l.allowances[owner][buyer];\\n        for (uint i = 0; i < ids.length; i++) {\\n            allowances[i] = allowance;\\n        }\\n        return allowances;\\n    }\\n}\\n\",\"keccak256\":\"0x58384aef38d44caa75ed591d2a985dd5708b5ad68466cefc81096081a228cd16\",\"license\":\"MIT\"},\"contracts/agent/lib/AllowanceFixedOneTimeStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.11;\\n\\nlibrary AllowanceFixedOneTimeStorage {\\n    struct Layout {\\n        mapping(address => mapping(address => uint)) allowances;\\n    }\\n\\n    bytes32 internal constant STORAGE_SLOT =\\n        keccak256('mining3.agent.contracts.storage.AllowanceStaticOneTime');\\n\\n    function layout() internal pure returns(Layout storage l) {\\n        bytes32 slot = STORAGE_SLOT;\\n        assembly {\\n            l.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc4863067c7b0675f68758c196e7280cd7611f0de34f7a0910ff8cc8194765c28\",\"license\":\"MIT\"},\"contracts/shared/lib/Util.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.11;\\n\\nlibrary Util {\\n    function ceil(uint a, uint m) internal pure returns(uint) {\\n        return ((a + m - 1) / m) * m;\\n    }\\n\\n    function max3(uint a, uint b, uint c) internal pure returns(uint) {\\n        return a > b ? max2(a, c) : max2(b, c);\\n    }\\n\\n    function max2(uint a, uint b) internal pure returns(uint) {\\n        return a > b ? a : b;\\n    }\\n\\n    function uint128max2(uint128 a, uint128 b) internal pure returns(uint128) {\\n        return a > b ? a : b;\\n    }\\n\\n    function min2(uint a, uint b) internal pure returns(uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    function uint128min2(uint128 a, uint128 b) internal pure returns(uint128) {\\n        return a < b ? a : b;\\n    }\\n\\n    function min3(uint a, uint b, uint c) internal pure returns(uint) {\\n        return a < b ? min2(a, c) : min2(b, c);\\n    }\\n}\\n\",\"keccak256\":\"0x193a469ef579e7ab002bdef2c4327accb3ee2293d252809ce2f478af143a7156\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610c80806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632196f2911461004657806357efe37414610062578063b8ac1b6814610092575b600080fd5b610060600480360381019061005b919061071a565b6100ae565b005b61007c600480360381019061007791906107b9565b610246565b60405161008991906108e6565b60405180910390f35b6100ac60048036038101906100a791906109bd565b610372565b005b60006100b86104ec565b905060008160000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060005b84518110156101b9578184828151811061015d5761015c610a2c565b5b602002602001015111156101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d90610ade565b60405180910390fd5b80806101b190610b2d565b915050610140565b5060008260000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050505050565b606060006102526104ec565b90506000835167ffffffffffffffff811115610271576102706105a1565b5b60405190808252806020026020018201604052801561029f5781602001602082028036833780820191505090505b50905060008260000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060005b8551811015610364578183828151811061034557610344610a2c565b5b602002602001018181525050808061035c90610b2d565b915050610328565b508193505050509392505050565b600061037c6104ec565b90506000828060200190518101906103949190610b8b565b905060008260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414806104235750600081145b610462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045990610c2a565b60405180910390fd5b808260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b6000807f51ab07786982b262898fe1ef961738fb6faac1f0a6acf463500e88ef9e7e45cd90508091505090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105588261052d565b9050919050565b6105688161054d565b811461057357600080fd5b50565b6000813590506105858161055f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105d982610590565b810181811067ffffffffffffffff821117156105f8576105f76105a1565b5b80604052505050565b600061060b610519565b905061061782826105d0565b919050565b600067ffffffffffffffff821115610637576106366105a1565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6106608161064d565b811461066b57600080fd5b50565b60008135905061067d81610657565b92915050565b60006106966106918461061c565b610601565b905080838252602082019050602084028301858111156106b9576106b8610648565b5b835b818110156106e257806106ce888261066e565b8452602084019350506020810190506106bb565b5050509392505050565b600082601f8301126107015761070061058b565b5b8135610711848260208601610683565b91505092915050565b6000806000806080858703121561073457610733610523565b5b600061074287828801610576565b945050602061075387828801610576565b935050604085013567ffffffffffffffff81111561077457610773610528565b5b610780878288016106ec565b925050606085013567ffffffffffffffff8111156107a1576107a0610528565b5b6107ad878288016106ec565b91505092959194509250565b6000806000606084860312156107d2576107d1610523565b5b60006107e086828701610576565b93505060206107f186828701610576565b925050604084013567ffffffffffffffff81111561081257610811610528565b5b61081e868287016106ec565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61085d8161064d565b82525050565b600061086f8383610854565b60208301905092915050565b6000602082019050919050565b600061089382610828565b61089d8185610833565b93506108a883610844565b8060005b838110156108d95781516108c08882610863565b97506108cb8361087b565b9250506001810190506108ac565b5085935050505092915050565b600060208201905081810360008301526109008184610888565b905092915050565b600080fd5b600067ffffffffffffffff821115610928576109276105a1565b5b61093182610590565b9050602081019050919050565b82818337600083830152505050565b600061096061095b8461090d565b610601565b90508281526020810184848401111561097c5761097b610908565b5b61098784828561093e565b509392505050565b600082601f8301126109a4576109a361058b565b5b81356109b484826020860161094d565b91505092915050565b6000806000606084860312156109d6576109d5610523565b5b60006109e486828701610576565b93505060206109f586828701610576565b925050604084013567ffffffffffffffff811115610a1657610a15610528565b5b610a228682870161098f565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f416c6c6f77616e636546697865643a20696e73756666696369656e7420616c6c60008201527f6f77616e63650000000000000000000000000000000000000000000000000000602082015250565b6000610ac8602683610a5b565b9150610ad382610a6c565b604082019050919050565b60006020820190508181036000830152610af781610abb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b388261064d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b6b57610b6a610afe565b5b600182019050919050565b600081519050610b8581610657565b92915050565b600060208284031215610ba157610ba0610523565b5b6000610baf84828501610b76565b91505092915050565b7f416c6c6f77616e63655374617469633a20726573657420616c6c6f77616e636560008201527f20746f2030206669727374000000000000000000000000000000000000000000602082015250565b6000610c14602b83610a5b565b9150610c1f82610bb8565b604082019050919050565b60006020820190508181036000830152610c4381610c07565b905091905056fea2646970667358221220b970b81c5ec6e384e504607fcb39bde69e79b7ec9447cfdf1dc7195fe8be36aa64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632196f2911461004657806357efe37414610062578063b8ac1b6814610092575b600080fd5b610060600480360381019061005b919061071a565b6100ae565b005b61007c600480360381019061007791906107b9565b610246565b60405161008991906108e6565b60405180910390f35b6100ac60048036038101906100a791906109bd565b610372565b005b60006100b86104ec565b905060008160000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060005b84518110156101b9578184828151811061015d5761015c610a2c565b5b602002602001015111156101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d90610ade565b60405180910390fd5b80806101b190610b2d565b915050610140565b5060008260000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050505050565b606060006102526104ec565b90506000835167ffffffffffffffff811115610271576102706105a1565b5b60405190808252806020026020018201604052801561029f5781602001602082028036833780820191505090505b50905060008260000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060005b8551811015610364578183828151811061034557610344610a2c565b5b602002602001018181525050808061035c90610b2d565b915050610328565b508193505050509392505050565b600061037c6104ec565b90506000828060200190518101906103949190610b8b565b905060008260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414806104235750600081145b610462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045990610c2a565b60405180910390fd5b808260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b6000807f51ab07786982b262898fe1ef961738fb6faac1f0a6acf463500e88ef9e7e45cd90508091505090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105588261052d565b9050919050565b6105688161054d565b811461057357600080fd5b50565b6000813590506105858161055f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105d982610590565b810181811067ffffffffffffffff821117156105f8576105f76105a1565b5b80604052505050565b600061060b610519565b905061061782826105d0565b919050565b600067ffffffffffffffff821115610637576106366105a1565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6106608161064d565b811461066b57600080fd5b50565b60008135905061067d81610657565b92915050565b60006106966106918461061c565b610601565b905080838252602082019050602084028301858111156106b9576106b8610648565b5b835b818110156106e257806106ce888261066e565b8452602084019350506020810190506106bb565b5050509392505050565b600082601f8301126107015761070061058b565b5b8135610711848260208601610683565b91505092915050565b6000806000806080858703121561073457610733610523565b5b600061074287828801610576565b945050602061075387828801610576565b935050604085013567ffffffffffffffff81111561077457610773610528565b5b610780878288016106ec565b925050606085013567ffffffffffffffff8111156107a1576107a0610528565b5b6107ad878288016106ec565b91505092959194509250565b6000806000606084860312156107d2576107d1610523565b5b60006107e086828701610576565b93505060206107f186828701610576565b925050604084013567ffffffffffffffff81111561081257610811610528565b5b61081e868287016106ec565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61085d8161064d565b82525050565b600061086f8383610854565b60208301905092915050565b6000602082019050919050565b600061089382610828565b61089d8185610833565b93506108a883610844565b8060005b838110156108d95781516108c08882610863565b97506108cb8361087b565b9250506001810190506108ac565b5085935050505092915050565b600060208201905081810360008301526109008184610888565b905092915050565b600080fd5b600067ffffffffffffffff821115610928576109276105a1565b5b61093182610590565b9050602081019050919050565b82818337600083830152505050565b600061096061095b8461090d565b610601565b90508281526020810184848401111561097c5761097b610908565b5b61098784828561093e565b509392505050565b600082601f8301126109a4576109a361058b565b5b81356109b484826020860161094d565b91505092915050565b6000806000606084860312156109d6576109d5610523565b5b60006109e486828701610576565b93505060206109f586828701610576565b925050604084013567ffffffffffffffff811115610a1657610a15610528565b5b610a228682870161098f565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f416c6c6f77616e636546697865643a20696e73756666696369656e7420616c6c60008201527f6f77616e63650000000000000000000000000000000000000000000000000000602082015250565b6000610ac8602683610a5b565b9150610ad382610a6c565b604082019050919050565b60006020820190508181036000830152610af781610abb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b388261064d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b6b57610b6a610afe565b5b600182019050919050565b600081519050610b8581610657565b92915050565b600060208284031215610ba157610ba0610523565b5b6000610baf84828501610b76565b91505092915050565b7f416c6c6f77616e63655374617469633a20726573657420616c6c6f77616e636560008201527f20746f2030206669727374000000000000000000000000000000000000000000602082015250565b6000610c14602b83610a5b565b9150610c1f82610bb8565b604082019050919050565b60006020820190508181036000830152610c4381610c07565b905091905056fea2646970667358221220b970b81c5ec6e384e504607fcb39bde69e79b7ec9447cfdf1dc7195fe8be36aa64736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}